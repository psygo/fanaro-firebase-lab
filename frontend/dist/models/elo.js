"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const game_record_1 = require("./game_record");
class Elo {
    num;
    static kBelow1500 = 50;
    static kBelow2000 = 40;
    static kAboveOrEqual2000 = 30;
    constructor(num) {
        this.num = num;
    }
    serialize = () => this.num;
    static deserialize = (json) => new Elo(json);
    get danOrKyu() {
        return this.num >= 2000;
    }
    danFormatter = (long = false) => (Math.floor(this.num / 100) - 20 + 1).toString() + (long ? " dan" : "d");
    kyuFormatter = (long = false) => (20 - Math.floor(this.num / 100)).toString() + (long ? " kyu" : "k");
    danKyuLevel = (long = false) => this.danOrKyu ? this.danFormatter(long) : this.kyuFormatter(long);
    get k() {
        return this.num < 1500
            ? Elo.kBelow1500
            : this.num < 2000
                ? Elo.kBelow2000
                : Elo.kAboveOrEqual2000;
    }
    deltaFromGame = (opponentElo, gameResult, handicap = 0, myColor = game_record_1.Color.Black) => {
        if (gameResult === game_record_1.GameResultStatus.Voided)
            return new Elo(0);
        const signedHandicap = myColor === game_record_1.Color.Black ? -handicap : handicap;
        const levelDiff = opponentElo.num - this.num + signedHandicap * 100;
        const gameResultAsNumber = gameResult === game_record_1.GameResultStatus.Win ? 1 : 0;
        const expectedValue = 1 / (1 + 10 ** (levelDiff / 400));
        const delta = Math.round((gameResultAsNumber - expectedValue) * this.k);
        return new Elo(delta);
    };
    add = (delta) => new Elo(this.num + delta.num);
}
exports.default = Elo;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxvLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21vZGVscy9lbG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSwrQ0FBd0Q7QUFLeEQsTUFBcUIsR0FBRztJQUtNO0lBSnBCLE1BQU0sQ0FBVSxVQUFVLEdBQVcsRUFBRSxDQUFDO0lBQ3hDLE1BQU0sQ0FBVSxVQUFVLEdBQVcsRUFBRSxDQUFDO0lBQ3hDLE1BQU0sQ0FBVSxpQkFBaUIsR0FBVyxFQUFFLENBQUM7SUFFdkQsWUFBNEIsR0FBVztRQUFYLFFBQUcsR0FBSCxHQUFHLENBQVE7SUFBRyxDQUFDO0lBRTNDLFNBQVMsR0FBRyxHQUFrQixFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztJQUUxQyxNQUFNLENBQUMsV0FBVyxHQUFHLENBQUMsSUFBZSxFQUFPLEVBQUUsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxJQUFjLENBQUMsQ0FBQztJQUV2RSxJQUFZLFFBQVE7UUFDbEIsT0FBTyxJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQztJQUMxQixDQUFDO0lBRU8sWUFBWSxHQUFHLENBQUMsT0FBZ0IsS0FBSyxFQUFVLEVBQUUsQ0FDdkQsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRW5FLFlBQVksR0FBRyxDQUFDLE9BQWdCLEtBQUssRUFBVSxFQUFFLENBQ3ZELENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXZFLFdBQVcsR0FBRyxDQUFDLE9BQWdCLEtBQUssRUFBVSxFQUFFLENBQzlDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFcEUsSUFBWSxDQUFDO1FBQ1gsT0FBTyxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUk7WUFDcEIsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFVO1lBQ2hCLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUk7Z0JBQ2pCLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBVTtnQkFDaEIsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQztJQUM1QixDQUFDO0lBRUQsYUFBYSxHQUFHLENBQ2QsV0FBZ0IsRUFDaEIsVUFBNEIsRUFDNUIsV0FBbUIsQ0FBQyxFQUNwQixVQUFpQixtQkFBSyxDQUFDLEtBQUssRUFDdkIsRUFBRTtRQUNQLElBQUksVUFBVSxLQUFLLDhCQUFnQixDQUFDLE1BQU07WUFBRSxPQUFPLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRTlELE1BQU0sY0FBYyxHQUFHLE9BQU8sS0FBSyxtQkFBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztRQUV0RSxNQUFNLFNBQVMsR0FBRyxXQUFXLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLEdBQUcsY0FBYyxHQUFHLEdBQUcsQ0FBQztRQUVwRSxNQUFNLGtCQUFrQixHQUN0QixVQUFVLEtBQUssOEJBQWdCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUU5QyxNQUFNLGFBQWEsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFFeEQsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLGtCQUFrQixHQUFHLGFBQWEsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUV4RSxPQUFPLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hCLENBQUMsQ0FBQztJQUVGLEdBQUcsR0FBRyxDQUFDLEtBQVUsRUFBTyxFQUFFLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7O0FBdEQzRCxzQkF1REMifQ==